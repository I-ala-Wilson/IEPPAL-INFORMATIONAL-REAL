---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro"; // Adjusted path for GitHub Pages
import Container from "../components/container.astro"; // Adjusted path for GitHub Pages
import Sectionhead from "../components/sectionhead.astro"; // Adjusted path for GitHub Pages
import linkedinIcon from "../assets/linkedin-icon.png"; // Adjusted path for GitHub Pages

const linkedinLinks = {
  "Ian Wilson": "https://www.linkedin.com/in/ian-wilson-a9ab40258/",
  "Rahul Cortez": "https://www.linkedin.com/in/matthew-cortez-75a035245/",
  "Ansel Natarajan": "https://www.linkedin.com/in/ansel-natarajan/",
};

const publishedTeamMembers = await getCollection("team", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

const sortedTeamMembers = publishedTeamMembers.sort((a, b) => {
  const order = ["Ansel Natarajan", "Ian Wilson", "Rahul Cortez"];
  return order.indexOf(a.data.name) - order.indexOf(b.data.name);
});
---

<Layout title="About">
  <Container>
    <div class="fade-in-section">
      <Sectionhead>
        <Fragment slot="title">About</Fragment>
        <Fragment slot="desc">Who is IEPPAL?</Fragment>
      </Sectionhead>

      <div class="flex flex-col gap-6 mx-auto max-w-4xl mt-16">
        <h2 class="font-bold text-3xl md:text-4xl text-gray-800 text-center">
          Empowering the field of learning support.
        </h2>
        <p class="text-lg md:text-xl leading-relaxed text-gray-600 text-center">
          We're a small team of Singapore American School Class of 2024 graduates
          passionate about educational technology and improving learning support worldwide.
        </p>
      </div>
    </div>

    <div class="team-grid">
      {sortedTeamMembers.map((teamMemberEntry, index) => (
        <div class="team-member-card fade-in-card" style={`animation-delay: ${index * 0.2}s;`}>
          <div class="card-content">
            <img
              src={teamMemberEntry.data.avatar.src}
              alt={teamMemberEntry.data.avatar.alt}
              class="w-full h-full object-cover"
            />
            <div class="info-overlay">
              <h2 class="text-xl md:text-2xl font-semibold text-white mb-1">
                {teamMemberEntry.data.name}
              </h2>
              <h3 class="text-base md:text-lg text-gray-200">
                {teamMemberEntry.data.title}
              </h3>
            </div>
          </div>
          <div class="card-description">
            <div class="description-text">
              <p class="large-intro">{teamMemberEntry.data.description.split(' ').slice(0, 3).join(' ')}</p>
              <p class="rest-of-text">{teamMemberEntry.data.description.split(' ').slice(3).join(' ')}</p>
            </div>
            <div class="linkedin-button-container">
              <button
                class="linkedin-link"
                data-linkedin={linkedinLinks[teamMemberEntry.data.name]}
              >
                <img src={linkedinIcon.src} alt="LinkedIn" class="w-5 h-5" />
                <span>{teamMemberEntry.data.name.split(" ")[0]}'s LinkedIn</span>
              </button>
            </div>
          </div>
        </div>
      ))}
    </div>
  </Container>
</Layout>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-in-section {
    animation: fadeIn 1s ease-out forwards;
    opacity: 0;
  }

  .fade-in-card {
    animation: fadeIn 1s ease-out forwards;
    opacity: 0;
  }

  .team-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 2rem;
    max-width: 1200px;
    margin: 2rem auto;
  }

  @media (min-width: 640px) {
    .team-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .team-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .team-member-card {
    position: relative;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }

  .card-content {
    position: relative;
    height: 300px;
  }

  @media (min-width: 768px) {
    .card-content {
      height: 400px;
    }
  }

  .info-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 1rem;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.7), transparent);
  }

  .card-description {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(255, 255, 255, 0.95);
    padding: 1.5rem;
    opacity: 0;
    transition: opacity 0.3s ease;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .description-text {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    overflow-y: auto;
    margin-bottom: 1rem;
  }

  .team-member-card:hover .card-description {
    opacity: 1;
  }

  .team-member-card:hover {
    transform: scale(1.05);
    z-index: 10;
  }

  .team-grid:hover .team-member-card:not(:hover) {
    filter: blur(2px);
    opacity: 0.7;
  }

  .large-intro {
    font-size: 1.5rem;
    font-weight: bold;
    color: black;
    line-height: 1.2;
  }

  @media (min-width: 768px) {
    .large-intro {
      font-size: 2rem;
    }
  }

  .rest-of-text {
    font-size: 1rem;
    color: black;
    line-height: 1.5;
  }

  .linkedin-button-container {
    width: 100%;
  }

  .linkedin-link {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.75rem;
    background-color: #0077b5;
    color: white;
    border: none;
    border-radius: 0.25rem;
    font-weight: bold;
    transition: background-color 0.3s ease;
    cursor: pointer;
  }

  .linkedin-link:hover {
    background-color: #005885;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const linkedinButtons = document.querySelectorAll(".linkedin-link");
    linkedinButtons.forEach((button) => {
      button.addEventListener("click", (e) => {
        e.preventDefault();
        const linkedinUrl = e.currentTarget.getAttribute("data-linkedin");
        if (linkedinUrl) {
          window.open(linkedinUrl, "_blank", "noopener,noreferrer");
        }
      });
    });

    // Add intersection observer for fade-in effect
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.style.animationPlayState = 'running';
        }
      });
    }, { threshold: 0.1 });

    document.querySelectorAll('.fade-in-card, .fade-in-section').forEach((el) => {
      el.style.animationPlayState = 'paused';
      observer.observe(el);
    });
  });
</script>
